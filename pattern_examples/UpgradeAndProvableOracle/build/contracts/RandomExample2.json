{
  "contractName": "RandomExample2",
  "abi": [
    {
      "inputs": [],
      "name": "queryId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "result",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_queryId",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "nrbytes",
          "type": "uint8"
        }
      ],
      "name": "GetRandom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"nrbytes\",\"type\":\"uint8\"}],\"name\":\"GetRandom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"queryId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"result\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"__callback(bytes32,string)\":{\"details\":\"The following `__callback` functions are just placeholders ideally      meant to be defined in child contract when proofs are used.      The function bodies simply silence compiler warnings.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Z/blockchain/web3examples/ethereum/pattern_examples/UpgradeAndOracle/contracts/RandomExample2.sol\":\"RandomExample2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Z/blockchain/web3examples/ethereum/pattern_examples/UpgradeAndOracle/contracts/RandomExample2.sol\":{\"keccak256\":\"0x39d31a067120b0d2ea7cf892fbebfa6e841f79ba0332743bfb1654ed4d893a1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5811fbb53cad0e2ff0a5ec7922db36791be586f2da845a5e73b9f6a812949406\",\"dweb:/ipfs/QmaQWUKNaKp4b3Kx8w6ExTX9WZbAzGho1RJSz1hx3QcwG9\"]},\"/Z/blockchain/web3examples/ethereum/pattern_examples/UpgradeAndOracle/contracts/provableAPI.sol\":{\"keccak256\":\"0x1fc6722eebb007804dc77ee8e11687a961b4e544ccccf8af18d8f445e0f52a34\",\"urls\":[\"bzz-raw://eaf215a13707520c96593e2d662d8e3eb18ff439a05468bc8e453532fe1e8286\",\"dweb:/ipfs/QmSEi8wMqzGPjH6d6KbZJzz4SgvSAHgCMVgFNtHXmhCUvW\"]},\"@openzeppelin/upgrades-core/contracts/Initializable.sol\":{\"keccak256\":\"0x7e710227a99f0d4ee7d7cfba6874192fb4ee80c270f5235c7966a6f3ab484b11\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://391395fae95454670cc03bf15b69469bebff8730ad326ed941e7c21cdfe3eff2\",\"dweb:/ipfs/QmPA9bYGsjqmG4bn8SsDLpQpd2sGW4HUfpMR6v66FGR6gA\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50613be9806100206000396000f3fe6080604052600436106100555760003560e01c806327dc297e1461005a57806338bbfa501461012c5780633f1be4d414610295578063446dd971146102c057806365372147146102f15780638129fc1c14610381575b600080fd5b34801561006657600080fd5b5061012a6004803603604081101561007d57600080fd5b8101908080359060200190929190803590602001906401000000008111156100a457600080fd5b8201836020820111156100b657600080fd5b803590602001918460018302840111640100000000831117156100d857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610398565b005b34801561013857600080fd5b506102936004803603606081101561014f57600080fd5b81019080803590602001909291908035906020019064010000000081111561017657600080fd5b82018360208201111561018857600080fd5b803590602001918460018302840111640100000000831117156101aa57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561020d57600080fd5b82018360208201111561021f57600080fd5b8035906020019184600183028401116401000000008311171561024157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506103f2565b005b3480156102a157600080fd5b506102aa6104b5565b6040518082815260200191505060405180910390f35b6102ef600480360360208110156102d657600080fd5b81019080803560ff1690602001909291905050506104bb565b005b3480156102fd57600080fd5b506103066104d6565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561034657808201518184015260208101905061032b565b50505050905090810190601f1680156103735780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561038d57600080fd5b50610396610574565b005b6103ee8282600067ffffffffffffffff811180156103b557600080fd5b506040519080825280601f01601f1916602001820160405280156103e85781602001600182028036833780820191505090505b506103f2565b5050565b6103fa610684565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461043157600080fd5b600061043e8484846109a1565b60ff16141561046357816038908051906020019061045d929190613967565b506104b0565b6040518060400160405280600581526020017f4572726f72000000000000000000000000000000000000000000000000000000815250603890805190602001906104ae9291906139e7565b505b505050565b60395481565b6104cd60008260ff1662030d40610ad1565b60398190555050565b60388054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561056c5780601f106105415761010080835404028352916020019161056c565b820191906000526020600020905b81548152906001019060200180831161054f57829003601f168201915b505050505081565b600560019054906101000a900460ff168061059357506105926110f6565b5b806105ab5750600560009054906101000a900460ff16155b610600576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613b46602e913960400191505060405180910390fd5b6000600560019054906101000a900460ff161590508015610652576001600560016101000a81548160ff0219169083151502179055506001600560006101000a81548160ff0219169083151502179055505b61065f603060f81b61110d565b8015610681576000600560016101000a81548160ff0219169083151502179055505b50565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061070c5750600061070a600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611431565b145b1561071d5761071b600061143c565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561078757600080fd5b505af115801561079b573d6000803e3d6000fd5b505050506040513d60208110156107b157600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108f957600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561087e57600080fd5b505af1158015610892573d6000803e3d6000fd5b505050506040513d60208110156108a857600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561096157600080fd5b505af1158015610975573d6000803e3d6000fd5b505050506040513d602081101561098b57600080fd5b8101908080519060200190929190505050905090565b60007f4c00000000000000000000000000000000000000000000000000000000000000826000815181106109d157fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141580610a6457507f500000000000000000000000000000000000000000000000000000000000000082600181518110610a3457fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b80610a905750600160ff1682600281518110610a7c57fe5b602001015160f81c60f81b60f81c60ff1614155b15610a9e5760019050610aca565b6000610ab3838686610aae61144d565b6114ef565b905080610ac4576002915050610aca565b60009150505b9392505050565b60008083118015610ae3575060208311155b610aec57600080fd5b600a840293506060600167ffffffffffffffff81118015610b0c57600080fd5b506040519080825280601f01601f191660200182016040528015610b3f5781602001600182028036833780820191505090505b5090508360f81b81600081518110610b5357fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506060602067ffffffffffffffff81118015610b9c57600080fd5b506040519080825280601f01601f191660200182016040528015610bcf5781602001600182028036833780820191505090505b5090506060602067ffffffffffffffff81118015610bec57600080fd5b506040519080825280601f01601f191660200182016040528015610c1f5781602001600182028036833780820191505090505b5090506000610c2c611c0e565b9050602083524241186001430340186020840152602082528060208301526060602067ffffffffffffffff81118015610c6457600080fd5b506040519080825280601f01601f191660200182016040528015610c975781602001600182028036833780820191505090505b5090508860208201526060600867ffffffffffffffff81118015610cba57600080fd5b506040519080825280601f01601f191660200182016040528015610ced5781602001600182028036833780820191505090505b509050610d008260186008846000611f29565b50610d09613a67565b60405180608001604052808781526020018881526020018681526020018481525090506000610d6e6040518060400160405280600681526020017f72616e646f6d0000000000000000000000000000000000000000000000000000815250838c611f88565b90506060600867ffffffffffffffff81118015610d8a57600080fd5b506040519080825280601f01601f191660200182016040528015610dbd5781602001600182028036833780820191505090505b50905060208401517f0100000000000000000000000000000000000000000000000000000000000000810460278301537e01000000000000000000000000000000000000000000000000000000000000810460268301537d010000000000000000000000000000000000000000000000000000000000810460258301537c0100000000000000000000000000000000000000000000000000000000810460248301537b01000000000000000000000000000000000000000000000000000000810460238301537a0100000000000000000000000000000000000000000000000000008104602283015379010000000000000000000000000000000000000000000000000081046021830153780100000000000000000000000000000000000000000000000081046020830153506110e3828285600160048110610efc57fe5b6020020151600287600060048110610f1057fe5b60200201516040518082805190602001908083835b60208310610f485780518252602082019150602081019050602083039250610f25565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015610f8a573d6000803e3d6000fd5b5050506040513d6020811015610f9f57600080fd5b810190808051906020019092919050505087600260048110610fbd57fe5b60200201516040516020018085805190602001908083835b60208310610ff85780518252602082019150602081019050602083039250610fd5565b6001836020036101000a03801982511681845116808217855250505050505090500184805190602001908083835b602083106110495780518252602082019150602081019050602083039250611026565b6001836020036101000a03801982511681845116808217855250505050505090500183815260200182805190602001908083835b602083106110a0578051825260208201915060208101905060208303925061107d565b6001836020036101000a0380198251168184511680821785525050505050509050019450505050506040516020818303038152906040528051906020012061230b565b8199505050505050505050509392505050565b6000803090506000813b9050600081149250505090565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061119457506000611192600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611431565b145b156111a5576111a3600061143c565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561120f57600080fd5b505af1158015611223573d6000803e3d6000fd5b505050506040513d602081101561123957600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461138157600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561130657600080fd5b505af115801561131a573d6000803e3d6000fd5b505050506040513d602081101561133057600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663688dcfd7826040518263ffffffff1660e01b815260040180827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001915050600060405180830381600087803b15801561141657600080fd5b505af115801561142a573d6000803e3d6000fd5b5050505050565b6000813b9050919050565b6000611446612327565b9050919050565b606060028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114e55780601f106114ba576101008083540402835291602001916114e5565b820191906000526020600020905b8154815290600101906020018083116114c857829003601f168201915b5050505050905090565b600080602060028760458151811061150357fe5b602001015160f81c60f81b60f81c60ff16016044010190506060602067ffffffffffffffff8111801561153557600080fd5b506040519080825280601f01601f1916602001820160405280156115685781602001600182028036833780820191505090505b50905061157a87836020846000611f29565b50600284876040516020018083805190602001908083835b602083106115b55780518252602082019150602081019050602083039250611592565b6001836020036101000a038019825116818451168082178552505050505050905001828152602001925050506040516020818303038152906040526040518082805190602001908083835b602083106116235780518252602082019150602081019050602083039250611600565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015611665573d6000803e3d6000fd5b5050506040513d602081101561167a57600080fd5b810190808051906020019092919050505060405160200180828152602001915050604051602081830303815290604052805190602001208180519060200120146116c957600092505050611c06565b606060028860016049860101815181106116df57fe5b602001015160f81c60f81b60f81c60ff160167ffffffffffffffff8111801561170757600080fd5b506040519080825280601f01601f19166020018201604052801561173a5781602001600182028036833780820191505090505b50905061174f88604985018351846000611f29565b5061181a6002826040518082805190602001908083835b602083106117895780518252602082019150602081019050602083039250611766565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa1580156117cb573d6000803e3d6000fd5b5050506040513d60208110156117e057600080fd5b8101908080519060200190929190505050878a600860208801018151811061180457fe5b602001015160f81c60f81b60f81c60ff1661287e565b61182a5760009350505050611c06565b6060602967ffffffffffffffff8111801561184457600080fd5b506040519080825280601f01601f1916602001820160405280156118775781602001600182028036833780820191505090505b50905061188c89602086016029846000611f29565b506060604067ffffffffffffffff811180156118a757600080fd5b506040519080825280601f01601f1916602001820160405280156118da5781602001600182028036833780820191505090505b50905060006041845160296020890101010190506119008b604083036040856000611f29565b5060006002836040518082805190602001908083835b602083106119395780518252602082019150602081019050602083039250611916565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa15801561197b573d6000803e3d6000fd5b5050506040513d602081101561199057600080fd5b8101908080519060200190929190505050905083816040516020018083805190602001908083835b602083106119db57805182526020820191506020810190506020830392506119b8565b6001836020036101000a0380198251168184511680821785525050505050509050018281526020019250505060405160208183030381529060405280519060200120600360008d8152602001908152602001600020541415611a5357600360008c815260200190815260200160002060009055611a63565b6000975050505050505050611c06565b6060604967ffffffffffffffff81118015611a7d57600080fd5b506040519080825280601f01601f191660200182016040528015611ab05781602001600182028036833780820191505090505b509050611ac28d896049846000611f29565b50611b6b6002826040518082805190602001908083835b60208310611afc5780518252602082019150602081019050602083039250611ad9565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015611b3e573d6000803e3d6000fd5b5050506040513d6020811015611b5357600080fd5b8101908080519060200190929190505050878661292b565b611b8057600098505050505050505050611c06565b6004600083815260200190815260200160002060009054906101000a900460ff16611bda57611baf8d84612b17565b6004600084815260200190815260200160002060006101000a81548160ff0219169083151502179055505b6004600083815260200190815260200160002060009054906101000a900460ff16985050505050505050505b949350505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611c9657506000611c94600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611431565b145b15611ca757611ca5600061143c565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611d1157600080fd5b505af1158015611d25573d6000803e3d6000fd5b505050506040513d6020811015611d3b57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611e8357600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611e0857600080fd5b505af1158015611e1c573d6000803e3d6000fd5b505050506040513d6020811015611e3257600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663abaa5f3e6040518163ffffffff1660e01b815260040160206040518083038186803b158015611ee957600080fd5b505afa158015611efd573d6000803e3d6000fd5b505050506040513d6020811015611f1357600080fd5b8101908080519060200190929190505050905090565b6060600082850190508084511015611f4057600080fd5b600086602001905060008460200190505b868860200101821015611f795781890151808288015250602082019150602081019050611f51565b85935050505095945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806120105750600061200e600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611431565b145b156120215761201f600061143c565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561208b57600080fd5b505af115801561209f573d6000803e3d6000fd5b505050506040513d60208110156120b557600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146121fd57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561218257600080fd5b505af1158015612196573d6000803e3d6000fd5b505050506040513d60208110156121ac57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6060600467ffffffffffffffff8111801561221757600080fd5b5060405190808252806020026020018201604052801561224b57816020015b60608152602001906001900390816122365790505b5090508360006004811061225b57fe5b60200201518160008151811061226d57fe5b60200260200101819052508360016004811061228557fe5b60200201518160018151811061229757fe5b6020026020010181905250836002600481106122af57fe5b6020020151816002815181106122c157fe5b6020026020010181905250836003600481106122d957fe5b6020020151816003815181106122eb57fe5b6020026020010181905250612301858285612fa3565b9150509392505050565b8060036000848152602001908152602001600020819055505050565b600080612347731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed611431565b11156123e957731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506123e06040518060400160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250613503565b6001905061287b565b600061240873c03a2615d5efaf5f49f60b7bb6583eaec212fdf1611431565b11156124aa5773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506124a16040518060400160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250613503565b6001905061287b565b60006124c973b7a07bcf2ba2f2703b24c0691b5278999c59ac7e611431565b111561256b5773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506125626040518060400160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250613503565b6001905061287b565b600061258a73146500cfd35b22e4a392fe0adc06de1a1368ed48611431565b111561262c5773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506126236040518060400160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250613503565b6001905061287b565b600061264b73a2998efd205fb9d4b4963afb70778d6354ad3a41611431565b11156126ed5773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506126e46040518060400160405280600a81526020017f6574685f676f65726c6900000000000000000000000000000000000000000000815250613503565b6001905061287b565b600061270c736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475611431565b111561277057736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061287b565b600061278f7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf611431565b11156127f3577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061287b565b60006128127351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa611431565b1115612876577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061287b565b600090505b90565b600080600190508284511461289257600080fd5b60005b8381101561291f578481815181106128a957fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168682602081106128e257fe5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461291257600091505b8080600101915050612895565b50809150509392505050565b60008060008060006060602067ffffffffffffffff8111801561294d57600080fd5b506040519080825280601f01601f1916602001820160405280156129805781602001600182028036833780820191505090505b509050600060208960038151811061299457fe5b602001015160f81c60f81b60f81c60ff160360040190506129ba89826020856000611f29565b91506060602067ffffffffffffffff811180156129d657600080fd5b506040519080825280601f01601f191660200182016040528015612a095781602001600182028036833780820191505090505b509050602282019150612a458a60208c6001860381518110612a2757fe5b602001015160f81c60f81b60f81c60ff160384016020846000611f29565b90506020830151945060208101519350612a628b601b878761351d565b80975081985050508573ffffffffffffffffffffffffffffffffffffffff16898051906020012060001c73ffffffffffffffffffffffffffffffffffffffff161415612ab8576001975050505050505050612b10565b612ac58b601c878761351d565b80975081985050508573ffffffffffffffffffffffffffffffffffffffff16898051906020012060001c73ffffffffffffffffffffffffffffffffffffffff16149750505050505050505b9392505050565b60008060606002856001860181518110612b2d57fe5b602001015160f81c60f81b60f81c60ff160167ffffffffffffffff81118015612b5557600080fd5b506040519080825280601f01601f191660200182016040528015612b885781602001600182028036833780820191505090505b509050612b9a85858351846000611f29565b506060604067ffffffffffffffff81118015612bb557600080fd5b506040519080825280601f01601f191660200182016040528015612be85781602001600182028036833780820191505090505b509050612bfb8660046040846000611f29565b506060606267ffffffffffffffff81118015612c1657600080fd5b506040519080825280601f01601f191660200182016040528015612c495781602001600182028036833780820191505090505b509050600160f81b81600081518110612c5e57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350612c9f87604188036041846001611f29565b5060606040518060400160405280602081526020017ffd94fa71bc0ba10d39d464d0d8f465efeef0a2764e3887fcc9df41ded20f505c8152509050612cea8160006020856042611f29565b50612d936002836040518082805190602001908083835b60208310612d245780518252602082019150602081019050602083039250612d01565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015612d66573d6000803e3d6000fd5b5050506040513d6020811015612d7b57600080fd5b8101908080519060200190929190505050858561292b565b945084612da857600095505050505050612f9d565b6060604051806060016040528060408152602001613b746040913990506060604267ffffffffffffffff81118015612ddf57600080fd5b506040519080825280601f01601f191660200182016040528015612e125781602001600182028036833780820191505090505b50905060fe60f81b81600081518110612e2757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350612e668a60036041846001611f29565b50606060028b604581518110612e7857fe5b602001015160f81c60f81b60f81c60ff160167ffffffffffffffff81118015612ea057600080fd5b506040519080825280601f01601f191660200182016040528015612ed35781602001600182028036833780820191505090505b509050612ee68b60448351846000611f29565b50612f8f6002836040518082805190602001908083835b60208310612f205780518252602082019150602081019050602083039250612efd565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015612f62573d6000803e3d6000fd5b5050506040513d6020811015612f7757600080fd5b8101908080519060200190929190505050828561292b565b975087985050505050505050505b92915050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061302b57506000613029600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611431565b145b1561303c5761303a600061143c565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156130a657600080fd5b505af11580156130ba573d6000803e3d6000fd5b505050506040513d60208110156130d057600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461321857600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561319d57600080fd5b505af11580156131b1573d6000803e3d6000fd5b505050506040513d60208110156131c757600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156132ae578082015181840152602081019050613293565b50505050905090810190601f1680156132db5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b1580156132fb57600080fd5b505af115801561330f573d6000803e3d6000fd5b505050506040513d602081101561332557600080fd5b81019080805190602001909291905050509050823a02670de0b6b3a764000001811115613358576000801b9150506134fc565b606061336385613561565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55c1cb68360008985896040518663ffffffff1660e01b8152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b838110156134065780820151818401526020810190506133eb565b50505050905090810190601f1680156134335780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b8381101561346c578082015181840152602081019050613451565b50505050905090810190601f1680156134995780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b1580156134bb57600080fd5b505af11580156134cf573d6000803e3d6000fd5b50505050506040513d60208110156134e657600080fd5b8101908080519060200190929190505050925050505b9392505050565b8060029080519060200190613519929190613a8e565b5050565b60008060008060405188815287602082015286604082015285606082015260208160808360006001610bb8f192508051915050818193509350505094509492505050565b606061356b6135de565b613573613b0e565b61357f816104006135ea565b61358881613634565b60005b83518110156135c7576135ba8482815181106135a357fe5b60200260200101518361364290919063ffffffff16565b808060010191505061358b565b506135d181613667565b8060000151915050919050565b60405180590338823950565b60008190506000602082816135fb57fe5b0614613614576020818161360b57fe5b06602003810190505b808360200181815250506040518084526000815281810160405250505050565b61363f816004613675565b50565b61364f8260028351613696565b61366281836137d690919063ffffffff16565b505050565b613672816007613675565b50565b613692601f60058360ff16901b178361388190919063ffffffff16565b5050565b601781116136c2576136bd8160058460ff16901b60ff16178461388190919063ffffffff16565b6137d1565b60ff8111613703576136e7601860058460ff16901b178461388190919063ffffffff16565b6136fd816001856138c19092919063ffffffff16565b506137d0565b61ffff811161374557613729601960058460ff16901b178461388190919063ffffffff16565b61373f816002856138c19092919063ffffffff16565b506137cf565b63ffffffff81116137895761376d601a60058460ff16901b178461388190919063ffffffff16565b613783816004856138c19092919063ffffffff16565b506137ce565b67ffffffffffffffff81116137cd576137b5601b60058460ff16901b178461388190919063ffffffff16565b6137cb816008856138c19092919063ffffffff16565b505b5b5b5b5b505050565b6137de613b0e565b8260200151836000015151835101111561380e5761380d83600261380786602001518651613928565b02613944565b5b60008060008451905085518051602081830101945086518101825260208701935050505b602081106138555781518352602083019250602082019150602081039050613832565b60006001826020036101000a039050801983511681855116818117865250508694505050505092915050565b816020015160018360000151510111156138a7576138a6826002846020015102613944565b5b815180516020818301018381536001820183525050505050565b6138c9613b0e565b8360200151846000015151830111156138f7576138f68460026138f0876020015186613928565b02613944565b5b60006001836101000a0390508451805184818301018684198251161781528582018352505050849150509392505050565b60008183111561393a5782905061393e565b8190505b92915050565b60608260000151905061395783836135ea565b61396183826137d6565b50505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106139a857805160ff19168380011785556139d6565b828001600101855582156139d6579182015b828111156139d55782518255916020019190600101906139ba565b5b5090506139e39190613b28565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613a2857805160ff1916838001178555613a56565b82800160010185558215613a56579182015b82811115613a55578251825591602001919060010190613a3a565b5b509050613a639190613b28565b5090565b60405180608001604052806004905b6060815260200190600190039081613a765790505090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613acf57805160ff1916838001178555613afd565b82800160010185558215613afd579182015b82811115613afc578251825591602001919060010190613ae1565b5b509050613b0a9190613b28565b5090565b604051806040016040528060608152602001600081525090565b5b80821115613b41576000816000905550600101613b29565b509056fe436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a65647fb956469c5c9b89840d55b43537e66a98dd4811ea0a27224272c2e5622911e8537a2f8e86a46baec82864e98dd01e9ccc2f8bc5dfc9cbe5a91a290498dd96e4a26469706673582212205da4fd61a9c738cfc14b623561322822384079831267bc341a3543a9df9816ef64736f6c634300060c0033",
  "deployedBytecode": "0x6080604052600436106100555760003560e01c806327dc297e1461005a57806338bbfa501461012c5780633f1be4d414610295578063446dd971146102c057806365372147146102f15780638129fc1c14610381575b600080fd5b34801561006657600080fd5b5061012a6004803603604081101561007d57600080fd5b8101908080359060200190929190803590602001906401000000008111156100a457600080fd5b8201836020820111156100b657600080fd5b803590602001918460018302840111640100000000831117156100d857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610398565b005b34801561013857600080fd5b506102936004803603606081101561014f57600080fd5b81019080803590602001909291908035906020019064010000000081111561017657600080fd5b82018360208201111561018857600080fd5b803590602001918460018302840111640100000000831117156101aa57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561020d57600080fd5b82018360208201111561021f57600080fd5b8035906020019184600183028401116401000000008311171561024157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506103f2565b005b3480156102a157600080fd5b506102aa6104b5565b6040518082815260200191505060405180910390f35b6102ef600480360360208110156102d657600080fd5b81019080803560ff1690602001909291905050506104bb565b005b3480156102fd57600080fd5b506103066104d6565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561034657808201518184015260208101905061032b565b50505050905090810190601f1680156103735780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561038d57600080fd5b50610396610574565b005b6103ee8282600067ffffffffffffffff811180156103b557600080fd5b506040519080825280601f01601f1916602001820160405280156103e85781602001600182028036833780820191505090505b506103f2565b5050565b6103fa610684565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461043157600080fd5b600061043e8484846109a1565b60ff16141561046357816038908051906020019061045d929190613967565b506104b0565b6040518060400160405280600581526020017f4572726f72000000000000000000000000000000000000000000000000000000815250603890805190602001906104ae9291906139e7565b505b505050565b60395481565b6104cd60008260ff1662030d40610ad1565b60398190555050565b60388054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561056c5780601f106105415761010080835404028352916020019161056c565b820191906000526020600020905b81548152906001019060200180831161054f57829003601f168201915b505050505081565b600560019054906101000a900460ff168061059357506105926110f6565b5b806105ab5750600560009054906101000a900460ff16155b610600576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613b46602e913960400191505060405180910390fd5b6000600560019054906101000a900460ff161590508015610652576001600560016101000a81548160ff0219169083151502179055506001600560006101000a81548160ff0219169083151502179055505b61065f603060f81b61110d565b8015610681576000600560016101000a81548160ff0219169083151502179055505b50565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061070c5750600061070a600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611431565b145b1561071d5761071b600061143c565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561078757600080fd5b505af115801561079b573d6000803e3d6000fd5b505050506040513d60208110156107b157600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108f957600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561087e57600080fd5b505af1158015610892573d6000803e3d6000fd5b505050506040513d60208110156108a857600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561096157600080fd5b505af1158015610975573d6000803e3d6000fd5b505050506040513d602081101561098b57600080fd5b8101908080519060200190929190505050905090565b60007f4c00000000000000000000000000000000000000000000000000000000000000826000815181106109d157fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141580610a6457507f500000000000000000000000000000000000000000000000000000000000000082600181518110610a3457fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b80610a905750600160ff1682600281518110610a7c57fe5b602001015160f81c60f81b60f81c60ff1614155b15610a9e5760019050610aca565b6000610ab3838686610aae61144d565b6114ef565b905080610ac4576002915050610aca565b60009150505b9392505050565b60008083118015610ae3575060208311155b610aec57600080fd5b600a840293506060600167ffffffffffffffff81118015610b0c57600080fd5b506040519080825280601f01601f191660200182016040528015610b3f5781602001600182028036833780820191505090505b5090508360f81b81600081518110610b5357fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506060602067ffffffffffffffff81118015610b9c57600080fd5b506040519080825280601f01601f191660200182016040528015610bcf5781602001600182028036833780820191505090505b5090506060602067ffffffffffffffff81118015610bec57600080fd5b506040519080825280601f01601f191660200182016040528015610c1f5781602001600182028036833780820191505090505b5090506000610c2c611c0e565b9050602083524241186001430340186020840152602082528060208301526060602067ffffffffffffffff81118015610c6457600080fd5b506040519080825280601f01601f191660200182016040528015610c975781602001600182028036833780820191505090505b5090508860208201526060600867ffffffffffffffff81118015610cba57600080fd5b506040519080825280601f01601f191660200182016040528015610ced5781602001600182028036833780820191505090505b509050610d008260186008846000611f29565b50610d09613a67565b60405180608001604052808781526020018881526020018681526020018481525090506000610d6e6040518060400160405280600681526020017f72616e646f6d0000000000000000000000000000000000000000000000000000815250838c611f88565b90506060600867ffffffffffffffff81118015610d8a57600080fd5b506040519080825280601f01601f191660200182016040528015610dbd5781602001600182028036833780820191505090505b50905060208401517f0100000000000000000000000000000000000000000000000000000000000000810460278301537e01000000000000000000000000000000000000000000000000000000000000810460268301537d010000000000000000000000000000000000000000000000000000000000810460258301537c0100000000000000000000000000000000000000000000000000000000810460248301537b01000000000000000000000000000000000000000000000000000000810460238301537a0100000000000000000000000000000000000000000000000000008104602283015379010000000000000000000000000000000000000000000000000081046021830153780100000000000000000000000000000000000000000000000081046020830153506110e3828285600160048110610efc57fe5b6020020151600287600060048110610f1057fe5b60200201516040518082805190602001908083835b60208310610f485780518252602082019150602081019050602083039250610f25565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015610f8a573d6000803e3d6000fd5b5050506040513d6020811015610f9f57600080fd5b810190808051906020019092919050505087600260048110610fbd57fe5b60200201516040516020018085805190602001908083835b60208310610ff85780518252602082019150602081019050602083039250610fd5565b6001836020036101000a03801982511681845116808217855250505050505090500184805190602001908083835b602083106110495780518252602082019150602081019050602083039250611026565b6001836020036101000a03801982511681845116808217855250505050505090500183815260200182805190602001908083835b602083106110a0578051825260208201915060208101905060208303925061107d565b6001836020036101000a0380198251168184511680821785525050505050509050019450505050506040516020818303038152906040528051906020012061230b565b8199505050505050505050509392505050565b6000803090506000813b9050600081149250505090565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061119457506000611192600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611431565b145b156111a5576111a3600061143c565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561120f57600080fd5b505af1158015611223573d6000803e3d6000fd5b505050506040513d602081101561123957600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461138157600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561130657600080fd5b505af115801561131a573d6000803e3d6000fd5b505050506040513d602081101561133057600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663688dcfd7826040518263ffffffff1660e01b815260040180827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001915050600060405180830381600087803b15801561141657600080fd5b505af115801561142a573d6000803e3d6000fd5b5050505050565b6000813b9050919050565b6000611446612327565b9050919050565b606060028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114e55780601f106114ba576101008083540402835291602001916114e5565b820191906000526020600020905b8154815290600101906020018083116114c857829003601f168201915b5050505050905090565b600080602060028760458151811061150357fe5b602001015160f81c60f81b60f81c60ff16016044010190506060602067ffffffffffffffff8111801561153557600080fd5b506040519080825280601f01601f1916602001820160405280156115685781602001600182028036833780820191505090505b50905061157a87836020846000611f29565b50600284876040516020018083805190602001908083835b602083106115b55780518252602082019150602081019050602083039250611592565b6001836020036101000a038019825116818451168082178552505050505050905001828152602001925050506040516020818303038152906040526040518082805190602001908083835b602083106116235780518252602082019150602081019050602083039250611600565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015611665573d6000803e3d6000fd5b5050506040513d602081101561167a57600080fd5b810190808051906020019092919050505060405160200180828152602001915050604051602081830303815290604052805190602001208180519060200120146116c957600092505050611c06565b606060028860016049860101815181106116df57fe5b602001015160f81c60f81b60f81c60ff160167ffffffffffffffff8111801561170757600080fd5b506040519080825280601f01601f19166020018201604052801561173a5781602001600182028036833780820191505090505b50905061174f88604985018351846000611f29565b5061181a6002826040518082805190602001908083835b602083106117895780518252602082019150602081019050602083039250611766565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa1580156117cb573d6000803e3d6000fd5b5050506040513d60208110156117e057600080fd5b8101908080519060200190929190505050878a600860208801018151811061180457fe5b602001015160f81c60f81b60f81c60ff1661287e565b61182a5760009350505050611c06565b6060602967ffffffffffffffff8111801561184457600080fd5b506040519080825280601f01601f1916602001820160405280156118775781602001600182028036833780820191505090505b50905061188c89602086016029846000611f29565b506060604067ffffffffffffffff811180156118a757600080fd5b506040519080825280601f01601f1916602001820160405280156118da5781602001600182028036833780820191505090505b50905060006041845160296020890101010190506119008b604083036040856000611f29565b5060006002836040518082805190602001908083835b602083106119395780518252602082019150602081019050602083039250611916565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa15801561197b573d6000803e3d6000fd5b5050506040513d602081101561199057600080fd5b8101908080519060200190929190505050905083816040516020018083805190602001908083835b602083106119db57805182526020820191506020810190506020830392506119b8565b6001836020036101000a0380198251168184511680821785525050505050509050018281526020019250505060405160208183030381529060405280519060200120600360008d8152602001908152602001600020541415611a5357600360008c815260200190815260200160002060009055611a63565b6000975050505050505050611c06565b6060604967ffffffffffffffff81118015611a7d57600080fd5b506040519080825280601f01601f191660200182016040528015611ab05781602001600182028036833780820191505090505b509050611ac28d896049846000611f29565b50611b6b6002826040518082805190602001908083835b60208310611afc5780518252602082019150602081019050602083039250611ad9565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015611b3e573d6000803e3d6000fd5b5050506040513d6020811015611b5357600080fd5b8101908080519060200190929190505050878661292b565b611b8057600098505050505050505050611c06565b6004600083815260200190815260200160002060009054906101000a900460ff16611bda57611baf8d84612b17565b6004600084815260200190815260200160002060006101000a81548160ff0219169083151502179055505b6004600083815260200190815260200160002060009054906101000a900460ff16985050505050505050505b949350505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611c9657506000611c94600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611431565b145b15611ca757611ca5600061143c565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611d1157600080fd5b505af1158015611d25573d6000803e3d6000fd5b505050506040513d6020811015611d3b57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611e8357600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611e0857600080fd5b505af1158015611e1c573d6000803e3d6000fd5b505050506040513d6020811015611e3257600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663abaa5f3e6040518163ffffffff1660e01b815260040160206040518083038186803b158015611ee957600080fd5b505afa158015611efd573d6000803e3d6000fd5b505050506040513d6020811015611f1357600080fd5b8101908080519060200190929190505050905090565b6060600082850190508084511015611f4057600080fd5b600086602001905060008460200190505b868860200101821015611f795781890151808288015250602082019150602081019050611f51565b85935050505095945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806120105750600061200e600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611431565b145b156120215761201f600061143c565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561208b57600080fd5b505af115801561209f573d6000803e3d6000fd5b505050506040513d60208110156120b557600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146121fd57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561218257600080fd5b505af1158015612196573d6000803e3d6000fd5b505050506040513d60208110156121ac57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6060600467ffffffffffffffff8111801561221757600080fd5b5060405190808252806020026020018201604052801561224b57816020015b60608152602001906001900390816122365790505b5090508360006004811061225b57fe5b60200201518160008151811061226d57fe5b60200260200101819052508360016004811061228557fe5b60200201518160018151811061229757fe5b6020026020010181905250836002600481106122af57fe5b6020020151816002815181106122c157fe5b6020026020010181905250836003600481106122d957fe5b6020020151816003815181106122eb57fe5b6020026020010181905250612301858285612fa3565b9150509392505050565b8060036000848152602001908152602001600020819055505050565b600080612347731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed611431565b11156123e957731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506123e06040518060400160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250613503565b6001905061287b565b600061240873c03a2615d5efaf5f49f60b7bb6583eaec212fdf1611431565b11156124aa5773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506124a16040518060400160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250613503565b6001905061287b565b60006124c973b7a07bcf2ba2f2703b24c0691b5278999c59ac7e611431565b111561256b5773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506125626040518060400160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250613503565b6001905061287b565b600061258a73146500cfd35b22e4a392fe0adc06de1a1368ed48611431565b111561262c5773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506126236040518060400160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250613503565b6001905061287b565b600061264b73a2998efd205fb9d4b4963afb70778d6354ad3a41611431565b11156126ed5773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506126e46040518060400160405280600a81526020017f6574685f676f65726c6900000000000000000000000000000000000000000000815250613503565b6001905061287b565b600061270c736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475611431565b111561277057736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061287b565b600061278f7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf611431565b11156127f3577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061287b565b60006128127351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa611431565b1115612876577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061287b565b600090505b90565b600080600190508284511461289257600080fd5b60005b8381101561291f578481815181106128a957fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168682602081106128e257fe5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461291257600091505b8080600101915050612895565b50809150509392505050565b60008060008060006060602067ffffffffffffffff8111801561294d57600080fd5b506040519080825280601f01601f1916602001820160405280156129805781602001600182028036833780820191505090505b509050600060208960038151811061299457fe5b602001015160f81c60f81b60f81c60ff160360040190506129ba89826020856000611f29565b91506060602067ffffffffffffffff811180156129d657600080fd5b506040519080825280601f01601f191660200182016040528015612a095781602001600182028036833780820191505090505b509050602282019150612a458a60208c6001860381518110612a2757fe5b602001015160f81c60f81b60f81c60ff160384016020846000611f29565b90506020830151945060208101519350612a628b601b878761351d565b80975081985050508573ffffffffffffffffffffffffffffffffffffffff16898051906020012060001c73ffffffffffffffffffffffffffffffffffffffff161415612ab8576001975050505050505050612b10565b612ac58b601c878761351d565b80975081985050508573ffffffffffffffffffffffffffffffffffffffff16898051906020012060001c73ffffffffffffffffffffffffffffffffffffffff16149750505050505050505b9392505050565b60008060606002856001860181518110612b2d57fe5b602001015160f81c60f81b60f81c60ff160167ffffffffffffffff81118015612b5557600080fd5b506040519080825280601f01601f191660200182016040528015612b885781602001600182028036833780820191505090505b509050612b9a85858351846000611f29565b506060604067ffffffffffffffff81118015612bb557600080fd5b506040519080825280601f01601f191660200182016040528015612be85781602001600182028036833780820191505090505b509050612bfb8660046040846000611f29565b506060606267ffffffffffffffff81118015612c1657600080fd5b506040519080825280601f01601f191660200182016040528015612c495781602001600182028036833780820191505090505b509050600160f81b81600081518110612c5e57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350612c9f87604188036041846001611f29565b5060606040518060400160405280602081526020017ffd94fa71bc0ba10d39d464d0d8f465efeef0a2764e3887fcc9df41ded20f505c8152509050612cea8160006020856042611f29565b50612d936002836040518082805190602001908083835b60208310612d245780518252602082019150602081019050602083039250612d01565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015612d66573d6000803e3d6000fd5b5050506040513d6020811015612d7b57600080fd5b8101908080519060200190929190505050858561292b565b945084612da857600095505050505050612f9d565b6060604051806060016040528060408152602001613b746040913990506060604267ffffffffffffffff81118015612ddf57600080fd5b506040519080825280601f01601f191660200182016040528015612e125781602001600182028036833780820191505090505b50905060fe60f81b81600081518110612e2757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350612e668a60036041846001611f29565b50606060028b604581518110612e7857fe5b602001015160f81c60f81b60f81c60ff160167ffffffffffffffff81118015612ea057600080fd5b506040519080825280601f01601f191660200182016040528015612ed35781602001600182028036833780820191505090505b509050612ee68b60448351846000611f29565b50612f8f6002836040518082805190602001908083835b60208310612f205780518252602082019150602081019050602083039250612efd565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015612f62573d6000803e3d6000fd5b5050506040513d6020811015612f7757600080fd5b8101908080519060200190929190505050828561292b565b975087985050505050505050505b92915050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061302b57506000613029600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611431565b145b1561303c5761303a600061143c565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156130a657600080fd5b505af11580156130ba573d6000803e3d6000fd5b505050506040513d60208110156130d057600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461321857600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561319d57600080fd5b505af11580156131b1573d6000803e3d6000fd5b505050506040513d60208110156131c757600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156132ae578082015181840152602081019050613293565b50505050905090810190601f1680156132db5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b1580156132fb57600080fd5b505af115801561330f573d6000803e3d6000fd5b505050506040513d602081101561332557600080fd5b81019080805190602001909291905050509050823a02670de0b6b3a764000001811115613358576000801b9150506134fc565b606061336385613561565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55c1cb68360008985896040518663ffffffff1660e01b8152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b838110156134065780820151818401526020810190506133eb565b50505050905090810190601f1680156134335780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b8381101561346c578082015181840152602081019050613451565b50505050905090810190601f1680156134995780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b1580156134bb57600080fd5b505af11580156134cf573d6000803e3d6000fd5b50505050506040513d60208110156134e657600080fd5b8101908080519060200190929190505050925050505b9392505050565b8060029080519060200190613519929190613a8e565b5050565b60008060008060405188815287602082015286604082015285606082015260208160808360006001610bb8f192508051915050818193509350505094509492505050565b606061356b6135de565b613573613b0e565b61357f816104006135ea565b61358881613634565b60005b83518110156135c7576135ba8482815181106135a357fe5b60200260200101518361364290919063ffffffff16565b808060010191505061358b565b506135d181613667565b8060000151915050919050565b60405180590338823950565b60008190506000602082816135fb57fe5b0614613614576020818161360b57fe5b06602003810190505b808360200181815250506040518084526000815281810160405250505050565b61363f816004613675565b50565b61364f8260028351613696565b61366281836137d690919063ffffffff16565b505050565b613672816007613675565b50565b613692601f60058360ff16901b178361388190919063ffffffff16565b5050565b601781116136c2576136bd8160058460ff16901b60ff16178461388190919063ffffffff16565b6137d1565b60ff8111613703576136e7601860058460ff16901b178461388190919063ffffffff16565b6136fd816001856138c19092919063ffffffff16565b506137d0565b61ffff811161374557613729601960058460ff16901b178461388190919063ffffffff16565b61373f816002856138c19092919063ffffffff16565b506137cf565b63ffffffff81116137895761376d601a60058460ff16901b178461388190919063ffffffff16565b613783816004856138c19092919063ffffffff16565b506137ce565b67ffffffffffffffff81116137cd576137b5601b60058460ff16901b178461388190919063ffffffff16565b6137cb816008856138c19092919063ffffffff16565b505b5b5b5b5b505050565b6137de613b0e565b8260200151836000015151835101111561380e5761380d83600261380786602001518651613928565b02613944565b5b60008060008451905085518051602081830101945086518101825260208701935050505b602081106138555781518352602083019250602082019150602081039050613832565b60006001826020036101000a039050801983511681855116818117865250508694505050505092915050565b816020015160018360000151510111156138a7576138a6826002846020015102613944565b5b815180516020818301018381536001820183525050505050565b6138c9613b0e565b8360200151846000015151830111156138f7576138f68460026138f0876020015186613928565b02613944565b5b60006001836101000a0390508451805184818301018684198251161781528582018352505050849150509392505050565b60008183111561393a5782905061393e565b8190505b92915050565b60608260000151905061395783836135ea565b61396183826137d6565b50505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106139a857805160ff19168380011785556139d6565b828001600101855582156139d6579182015b828111156139d55782518255916020019190600101906139ba565b5b5090506139e39190613b28565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613a2857805160ff1916838001178555613a56565b82800160010185558215613a56579182015b82811115613a55578251825591602001919060010190613a3a565b5b509050613a639190613b28565b5090565b60405180608001604052806004905b6060815260200190600190039081613a765790505090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613acf57805160ff1916838001178555613afd565b82800160010185558215613afd579182015b82811115613afc578251825591602001919060010190613ae1565b5b509050613b0a9190613b28565b5090565b604051806040016040528060608152602001600081525090565b5b80821115613b41576000816000905550600101613b29565b509056fe436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a65647fb956469c5c9b89840d55b43537e66a98dd4811ea0a27224272c2e5622911e8537a2f8e86a46baec82864e98dd01e9ccc2f8bc5dfc9cbe5a91a290498dd96e4a26469706673582212205da4fd61a9c738cfc14b623561322822384079831267bc341a3543a9df9816ef64736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "156:862:2:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "156:862:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15744:132:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;388:326:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;244:22;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;726:289;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;218:19;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;279:97;;;;;;;;;;;;;:::i;:::-;;15744:132:3;15828:40;15839:5;15846:7;15865:1;15855:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15828:10;:40::i;:::-;15744:132;;:::o;388:326:2:-;519:20;:18;:20::i;:::-;505:34;;:10;:34;;;497:43;;;;;;624:1;555:66;597:8;606:7;614:6;555:41;:66::i;:::-;:70;;;551:155;;;655:7;640:6;:23;;;;;;;;;;;;:::i;:::-;;551:155;;;692:14;;;;;;;;;;;;;;;;;:6;:14;;;;;;;;;;;;:::i;:::-;;551:155;388:326;;;:::o;244:22::-;;;;:::o;726:289::-;820:187;860:1;910:7;820:187;;965:6;820:25;:187::i;:::-;812:7;:195;;;;726:289;:::o;218:19::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;279:97::-;1057:12:4;;;;;;;;;;;:31;;;;1073:15;:13;:15::i;:::-;1057:31;:47;;;;1093:11;;;;;;;;;;;1092:12;1057:47;1049:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1162:19;1185:12;;;;;;;;;;;1184:13;1162:35;;1207:14;1203:80;;;1246:4;1231:12;;:19;;;;;;;;;;;;;;;;;;1272:4;1258:11;;:18;;;;;;;;;;;;;;;;;;1203:80;332:35:2::1;11574:4:3;350:16:2;;332:17;:35::i;:::-;1301:14:4::0;1297:55;;;1340:5;1325:12;;:20;;;;;;;;;;;;;;;;;;1297:55;279:97:2;:::o;38114:132:3:-;38174:24;12213:1;12189:26;;12197:3;;;;;;;;;;;12189:26;;;12188:64;;;;12250:1;12221:25;12241:3;;;;;;;;;;;12221:11;:25::i;:::-;:30;12188:64;12184:132;;;12269:35;11835:1;12269:19;:35::i;:::-;;12184:132;12351:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12330:37;;12338:8;;;;;;;;;;12330:37;;;12326:108;;12405:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12384:8;;:38;;;;;;;;;;;;;;;;;;12326:108;38218:8:::1;::::0;::::1;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;38211:27;;38114:132:::0;:::o;51709:589::-;51840:17;51969:16;:6;51976:1;51969:9;;;;;;;;;;;;;;;;:16;;;;;51968:40;;;;51991:16;:6;51998:1;51991:9;;;;;;;;;;;;;;;;:16;;;;;51968:40;:74;;;;52039:1;52013:28;;52019:6;52026:1;52019:9;;;;;;;;;;;;;;;;52013:16;;:28;;;;51968:74;51964:115;;;52066:1;52059:8;;;;51964:115;52089:18;52110:96;52146:6;52154:8;52170:7;52180:25;:23;:25::i;:::-;52110:35;:96::i;:::-;52089:117;;52222:13;52217:55;;52259:1;52252:8;;;;;52217:55;52289:1;52282:8;;;51709:589;;;;;;:::o;46187:2689::-;46289:16;46337:1;46327:7;:11;46326:32;;;;;46355:2;46344:7;:13;;46326:32;46318:41;;;;;;46380:2;46370:12;;;;46439:19;46471:1;46461:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46439:34;;46507:7;46496:20;;46484:6;46491:1;46484:9;;;;;;;;;;;:32;;;;;;;;;;;46527:19;46559:2;46549:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46527:35;;46573:27;46613:2;46603:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46573:43;;46627:30;46660:40;:38;:40::i;:::-;46627:73;;46750:4;46742:6;46735:20;47107:11;47095:10;47091:28;47086:1;47076:8;47072:16;47062:27;47058:62;47051:4;47043:6;47039:17;47032:89;47158:4;47142:14;47135:28;47211:22;47204:4;47188:14;47184:25;47177:57;47255:18;47286:2;47276:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47255:34;;47349:6;47342:4;47335:5;47331:16;47324:32;47377:25;47415:1;47405:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47377:40;;47428;47438:5;47445:2;47449:1;47452:12;47466:1;47428:9;:40::i;:::-;;47479:20;;:::i;:::-;:62;;;;;;;;47503:6;47479:62;;;;47511:6;47479:62;;;;47519:14;47479:62;;;;47535:5;47479:62;;;;;47552:15;47570:47;;;;;;;;;;;;;;;;;;47595:4;47601:15;47570:14;:47::i;:::-;47552:65;;47628:30;47671:1;47661:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47628:45;;47741:4;47727:12;47723:23;47717:30;47806:65;47803:1;47799:73;47792:4;47773:17;47769:28;47761:112;47932:63;47929:1;47925:71;47918:4;47899:17;47895:28;47887:110;48056:61;48053:1;48049:69;48042:4;48023:17;48019:28;48011:108;48178:59;48175:1;48171:67;48164:4;48145:17;48141:28;48133:106;48298:57;48295:1;48291:65;48284:4;48265:17;48261:28;48253:104;48416:55;48413:1;48409:63;48402:4;48383:17;48379:28;48371:102;48532:53;48529:1;48525:61;48518:4;48499:17;48495:28;48487:100;48646:51;48643:1;48639:59;48632:4;48613:17;48609:28;48601:98;47693:1017;48720:123;48752:7;48788:17;48807:4;48812:1;48807:7;;;;;;;;;;;48816:15;48823:4;48828:1;48823:7;;;;;;;;;;;48816:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;48833:4;48838:1;48833:7;;;;;;;;;;;48771:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;48761:81;;;;;;48720:31;:123::i;:::-;48861:7;48854:14;;;;;;;;;;;46187:2689;;;;;:::o;1442:498:4:-;1489:4;1830:12;1853:4;1830:28;;1864:10;1909:4;1897:17;1891:23;;1934:1;1928:2;:7;1921:14;;;;1442:498;:::o;37986:118:3:-;12213:1;12189:26;;12197:3;;;;;;;;;;;12189:26;;;12188:64;;;;12250:1;12221:25;12241:3;;;;;;;;;;;12221:11;:25::i;:::-;:30;12188:64;12184:132;;;12269:35;11835:1;12269:19;:35::i;:::-;;12184:132;12351:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12330:37;;12338:8;;;;;;;;;;12330:37;;;12326:108;;12405:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12384:8;;:38;;;;;;;;;;;;;;;;;;12326:108;38066:8:::1;::::0;::::1;;;;;;;;:21;;;38088:7;38066:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;37986:118:::0;:::o;38254:151::-;38313:10;38381:5;38369:18;38360:27;;38345:53;;;:::o;12938:208::-;13003:16;13117:21;:19;:21::i;:::-;13110:28;;12938:208;;;:::o;13289:133::-;13347:26;13393:21;13386:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13289:133;:::o;52717:2791::-;52869:19;53014:22;53088:2;53083:1;53060:6;53067:10;53060:18;;;;;;;;;;;;;;;;53054:25;;53049:31;;:35;53039:6;:46;:51;53014:76;;53101:20;53134:2;53124:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;53101:36;;53148:52;53158:6;53166:17;53185:2;53189:7;53198:1;53148:9;:52::i;:::-;;53266:48;53290:12;53304:8;53273:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;53266:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;53249:66;;;;;;;;;;;;;;;;;;;;;;;;;53239:77;;;;;;53227:7;53217:18;;;;;;:99;53211:147;;53341:5;53334:12;;;;;;53211:147;53368:17;53463:1;53409:6;53456:1;53437:15;53416:17;:37;:41;53409:49;;;;;;;;;;;;;;;;53403:56;;53398:62;;:66;53388:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;53368:97;;53476:78;53486:6;53515:15;53494:17;:37;53533:4;:11;53546:4;53552:1;53476:9;:78::i;:::-;;53724:90;53743:12;53750:4;53743:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;53757:7;53777:6;53809:1;53804:2;53784:17;:22;:26;53777:34;;;;;;;;;;;;;;;;53771:41;;53766:47;;53724:18;:90::i;:::-;53719:136;;53838:5;53831:12;;;;;;;53719:136;54104:29;54146:10;54136:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;54104:53;;54168:74;54178:6;54206:2;54186:17;:22;54210:10;54222:16;54240:1;54168:9;:74::i;:::-;;54253:26;54292:2;54282:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;54253:42;;54306:15;54378:2;54364:4;:11;54350:10;54344:2;54324:17;:22;:37;:51;:56;54306:74;;54391:56;54401:6;54422:2;54409:10;:15;54426:2;54430:13;54445:1;54391:9;:56::i;:::-;;54458:25;54486:21;54493:13;54486:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;54458:49;;54585:16;54603:17;54568:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;54558:64;;;;;;54522:22;:32;54545:8;54522:32;;;;;;;;;;;;:100;54518:232;;;54688:22;:32;54711:8;54688:32;;;;;;;;;;;54681:39;;;54518:232;;;54745:5;54738:12;;;;;;;;;;;54518:232;54874:20;54907:15;54897:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;54874:49;;54934:65;54944:6;54952:17;54971:15;54988:7;54997:1;54934:9;:65::i;:::-;;55015:47;55025:15;55032:7;55025:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;55042:4;55048:13;55015:9;:47::i;:::-;55010:93;;55086:5;55079:12;;;;;;;;;;;;55010:93;55202:41;:60;55244:17;55202:60;;;;;;;;;;;;;;;;;;;;;55197:226;;55342:69;55392:6;55400:10;55342:49;:69::i;:::-;55279:41;:60;55321:17;55279:60;;;;;;;;;;;;:132;;;;;;;;;;;;;;;;;;55197:226;55440:41;:60;55482:17;55440:60;;;;;;;;;;;;;;;;;;;;;55433:67;;;;;;;;;;52717:2791;;;;;;;:::o;38557:171::-;38637:23;12213:1;12189:26;;12197:3;;;;;;;;;;;12189:26;;;12188:64;;;;12250:1;12221:25;12241:3;;;;;;;;;;;12221:11;:25::i;:::-;:30;12188:64;12184:132;;;12269:35;11835:1;12269:19;:35::i;:::-;;12184:132;12351:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12330:37;;12338:8;;;;;;;;;;12330:37;;;12326:108;;12405:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12384:8;;:38;;;;;;;;;;;;;;;;;;12326:108;38680:8:::1;::::0;::::1;;;;;;;;:38;;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;38673:47;;38557:171:::0;:::o;55647:707::-;55775:25;55813:14;55840:9;55830:7;:19;55813:36;;55882:9;55868:3;:10;:23;;55860:32;;;;;;55948:6;55962:11;55957:2;:16;55948:25;;56065:6;56079:9;56074:2;:14;56065:23;;56099:227;56130:7;56116:11;56111:2;:16;:26;56106:1;:32;56099:227;;;56211:1;56204:5;56200:13;56194:20;56252:3;56248:1;56243:3;56239:11;56232:24;56164:107;56290:2;56285:7;;;;56312:2;56307:7;;;;56099:227;;;56343:3;56336:10;;;;;55647:707;;;;;;;:::o;35894:384::-;36014:11;12213:1;12189:26;;12197:3;;;;;;;;;;;12189:26;;;12188:64;;;;12250:1;12221:25;12241:3;;;;;;;;;;;12221:11;:25::i;:::-;:30;12188:64;12184:132;;;12269:35;11835:1;12269:19;:35::i;:::-;;12184:132;12351:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12330:37;;12338:8;;;;;;;;;;12330:37;;;12326:108;;12405:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12384:8;;:38;;;;;;;;;;;;;;;;;;12326:108;36038:22:::1;36075:1;36063:14;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36038:39;;36101:5;36107:1;36101:8;;;;;;;;;;;36088:7;36096:1;36088:10;;;;;;;;;;;;;:21;;;;36133:5;36139:1;36133:8;;;;;;;;;;;36120:7;36128:1;36120:10;;;;;;;;;;;;;:21;;;;36165:5;36171:1;36165:8;;;;;;;;;;;36152:7;36160:1;36152:10;;;;;;;;;;;;;:21;;;;36197:5;36203:1;36197:8;;;;;;;;;;;36184:7;36192:1;36184:10;;;;;;;;;;;;;:21;;;;36223:47;36238:11;36251:7;36260:9;36223:14;:47::i;:::-;36216:54;;;35894:384:::0;;;;;:::o;48884:154::-;49019:11;48984:22;:32;49007:8;48984:32;;;;;;;;;;;:46;;;;48884:154;;:::o;13430:2070::-;13479:16;13570:1;13512:55;13524:42;13512:11;:55::i;:::-;:59;13508:250;;;13624:42;13598:3;;:69;;;;;;;;;;;;;;;;;;13682:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;13742:4;13735:11;;;;13508:250;13830:1;13772:55;13784:42;13772:11;:55::i;:::-;:59;13768:259;;;13892:42;13866:3;;:69;;;;;;;;;;;;;;;;;;13950:39;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;14011:4;14004:11;;;;13768:259;14099:1;14041:55;14053:42;14041:11;:55::i;:::-;:59;14037:254;;;14159:42;14133:3;;:69;;;;;;;;;;;;;;;;;;14217:36;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;14275:4;14268:11;;;;14037:254;14363:1;14305:55;14317:42;14305:11;:55::i;:::-;:59;14301:258;;;14425:42;14399:3;;:69;;;;;;;;;;;;;;;;;;14483:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;14543:4;14536:11;;;;14301:258;14631:1;14573:55;14585:42;14573:11;:55::i;:::-;:59;14569:256;;;14692:42;14666:3;;:69;;;;;;;;;;;;;;;;;;14750:37;;;;;;;;;;;;;;;;;;:23;:37::i;:::-;14809:4;14802:11;;;;14569:256;14897:1;14839:55;14851:42;14839:11;:55::i;:::-;:59;14835:205;;;14959:42;14933:3;;:69;;;;;;;;;;;;;;;;;;15024:4;15017:11;;;;14835:205;15112:1;15054:55;15066:42;15054:11;:55::i;:::-;:59;15050:204;;;15173:42;15147:3;;:69;;;;;;;;;;;;;;;;;;15238:4;15231:11;;;;15050:204;15326:1;15268:55;15280:42;15268:11;:55::i;:::-;:59;15264:206;;;15389:42;15363:3;;:69;;;;;;;;;;;;;;;;;;15454:4;15447:11;;;;15264:206;15487:5;15480:12;;13430:2070;;:::o;52306:403::-;52417:19;52449:11;52463:4;52449:18;;52504:13;52486:7;:14;:31;52478:40;;;;;;52534:9;52529:149;52552:13;52549:1;:16;52529:149;;;52606:7;52614:1;52606:10;;;;;;;;;;;;;;;;52591:25;;;:8;52600:1;52591:11;;;;;;;;;;:25;;;;52587:80;;52646:5;52637:14;;52587:80;52567:3;;;;;;;52529:149;;;;52695:6;52688:13;;;52306:403;;;;;:::o;49046:1025::-;49145:17;49175:10;49196:14;49221:12;49244;49267:18;49298:2;49288:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49267:34;;49312:11;49357:4;49342:7;49350:1;49342:10;;;;;;;;;;;;;;;;49336:17;;49331:23;;:30;49326:1;:36;49312:50;;49381:40;49391:7;49400:6;49408:2;49412:5;49419:1;49381:9;:40::i;:::-;49373:48;;49432:18;49463:2;49453:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49432:34;;49487:6;49477:16;;;;49512:84;49522:7;49576:4;49552:7;49569:1;49560:6;:10;49552:19;;;;;;;;;;;;;;;;49546:26;;49541:32;;:39;49531:6;:50;49583:2;49587:5;49594:1;49512:9;:84::i;:::-;49504:92;;49656:2;49649:5;49645:14;49639:21;49631:29;;49699:2;49692:5;49688:14;49682:21;49674:29;;49742:41;49758:8;49768:2;49772:4;49778;49742:15;:41::i;:::-;49724:59;;;;;;;;49847:6;49798:55;;49832:7;49822:18;;;;;;49814:27;;49798:55;;;49794:270;;;49877:4;49870:11;;;;;;;;;;;49794:270;49932:41;49948:8;49958:2;49962:4;49968;49932:15;:41::i;:::-;49914:59;;;;;;;;50045:6;49996:55;;50030:7;50020:18;;;;;;50012:27;;49996:55;;;49988:64;;;;;;;;;49046:1025;;;;;;:::o;50079:1622::-;50195:19;50227:10;50390:17;50459:1;50431:6;50452:1;50438:11;:15;50431:23;;;;;;;;;;;;;;;;50425:30;;50420:36;;:40;50410:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;50390:71;;50472:52;50482:6;50490:11;50503:4;:11;50516:4;50522:1;50472:9;:52::i;:::-;;50535:27;50575:2;50565:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;50535:43;;50589:47;50599:6;50607:5;50614:2;50618:14;50634:1;50589:9;:47::i;:::-;;50647:20;50680:11;50670:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;50647:45;;50727:1;50716:14;;50703:7;50711:1;50703:10;;;;;;;;;;;:27;;;;;;;;;;;50748:51;50758:6;50780:2;50766:11;:16;50784:2;50788:7;50797:1;50748:9;:51::i;:::-;;50810:21;:93;;;;;;;;;;;;;;;;;;;50914:43;50924:8;50934:1;50937:2;50941:7;50950:6;50914:9;:43::i;:::-;;50976:48;50986:15;50993:7;50986:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;51003:4;51009:14;50976:9;:48::i;:::-;50968:56;;51040:5;51035:51;;51069:5;51062:12;;;;;;;;;51035:51;51189:22;:158;;;;;;;;;;;;;;;;;;;51358:20;51391:6;51381:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;51358:40;;51422:4;51409:17;;:7;51417:1;51409:10;;;;;;;;;;;:17;;;;;;;;;;;51437:36;51447:6;51455:1;51458:2;51462:7;51471:1;51437:9;:36::i;:::-;;51484:17;51548:1;51525:6;51532:10;51525:18;;;;;;;;;;;;;;;;51519:25;;51514:31;;:35;51504:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;51484:66;;51561:47;51571:6;51579;51587:4;:11;51600:4;51606:1;51561:9;:47::i;:::-;;51627:43;51637:15;51644:7;51637:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;51654:4;51660:9;51627;:43::i;:::-;51619:51;;51688:5;51681:12;;;;;;;;;;50079:1622;;;;;:::o;30296:462::-;30415:11;12213:1;12189:26;;12197:3;;;;;;;;;;;12189:26;;;12188:64;;;;12250:1;12221:25;12241:3;;;;;;;;;;;12221:11;:25::i;:::-;:30;12188:64;12184:132;;;12269:35;11835:1;12269:19;:35::i;:::-;;12184:132;12351:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12330:37;;12338:8;;;;;;;;;;12330:37;;;12326:108;;12405:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12384:8;;:38;;;;;;;;;;;;;;;;;;12326:108;30439:10:::1;30452:8:::0;::::1;;;;;;;;;;:17;;;30470:11;30483:9;30452:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;30439:54;;30540:9;30526:11;:23;30516:7;:33;30508:5;:41;30504:109;;;30573:1;30566:8:::0;::::1;;;;;;30504:109;30623:17;30643:14;30651:5;30643:7;:14::i;:::-;30623:34;;30675:8;::::0;::::1;;;;;;;;:28;;;30711:5;30718:1;30721:11;30734:4;30740:9;30675:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;30668:82;;;;12444:1;30296:462:::0;;;;;:::o;13154:127::-;13260:13;13236:21;:37;;;;;;;;;;;;:::i;:::-;;13154:127;:::o;56566:1003::-;56658:13;56673:25;57113:8;57132:12;57197:4;57191:11;57229:5;57223:4;57216:19;57271:2;57266;57260:4;57256:13;57249:25;57310:2;57305;57299:4;57295:13;57288:25;57349:2;57344;57338:4;57334:13;57327:25;57407:2;57401:4;57396:3;57390:4;57387:1;57384;57378:4;57373:37;57366:44;;57517:4;57511:11;57503:19;;57164:369;57551:3;57556:4;57543:18;;;;;;56566:1003;;;;;;;:::o;45804:375::-;45865:26;45904:19;:17;:19::i;:::-;45934:24;;:::i;:::-;45969:22;45981:3;45986:4;45969:11;:22::i;:::-;46002:16;:3;:14;:16::i;:::-;46034:6;46029:90;46050:4;:11;46046:1;:15;46029:90;;;46083:24;46099:4;46104:1;46099:7;;;;;;;;;;;;;;46083:3;:15;;:24;;;;:::i;:::-;46063:3;;;;;;;46029:90;;;;46129:17;:3;:15;:17::i;:::-;46164:3;:7;;;46157:14;;;45804:375;;;:::o;59301:179::-;59397:4;59391:11;59456:4;59447:7;59443:18;59431:10;59425:4;59416:46;59364:109;:::o;4419:446::-;4494:13;4510:9;4494:25;;4551:1;4545:2;4534:8;:13;;;;;;:18;4530:83;;4598:2;4587:8;:13;;;;;;4581:2;:20;4569:32;;;;4530:83;4639:8;4623:4;:13;;:24;;;;;4737:4;4731:11;4769:3;4763:4;4756:17;4799:1;4794:3;4787:14;4837:8;4832:3;4828:18;4822:4;4815:32;4705:153;;;;:::o;10795:130::-;10867:50;10894:4;8902:1;10867:26;:50::i;:::-;10795:130;:::o;10400:181::-;10494:49;10505:4;8852:1;10529:6;:13;10494:10;:49::i;:::-;10554:19;10566:6;10554:4;:11;;:19;;;;:::i;:::-;;10400:181;;:::o;11067:138::-;11140:57;11167:4;9067:1;11140:26;:57::i;:::-;11067:138;:::o;9823:147::-;9924:38;9958:2;9953:1;9943:6;:11;;;;9942:18;9924:4;:11;;:38;;;;:::i;:::-;9823:147;;:::o;9077:738::-;9189:2;9179:6;:12;9175:633;;9208:42;9242:6;9237:1;9227:6;:11;;;;9226:22;;;9208:4;:11;;:42;;;;:::i;:::-;9175:633;;;9282:4;9272:6;:14;9268:540;;9303:38;9337:2;9332:1;9322:6;:11;;;;9321:18;9303:4;:11;;:38;;;;:::i;:::-;9356:25;9371:6;9379:1;9356:4;:14;;:25;;;;;:::i;:::-;;9268:540;;;9413:6;9403;:16;9399:409;;9436:38;9470:2;9465:1;9455:6;:11;;;;9454:18;9436:4;:11;;:38;;;;:::i;:::-;9489:25;9504:6;9512:1;9489:4;:14;;:25;;;;;:::i;:::-;;9399:409;;;9546:10;9536:6;:20;9532:276;;9573:38;9607:2;9602:1;9592:6;:11;;;;9591:18;9573:4;:11;;:38;;;;:::i;:::-;9626:25;9641:6;9649:1;9626:4;:14;;:25;;;;;:::i;:::-;;9532:276;;;9683:18;9673:6;:28;9669:139;;9718:38;9752:2;9747:1;9737:6;:11;;;;9736:18;9718:4;:11;;:38;;;;:::i;:::-;9771:25;9786:6;9794:1;9771:4;:14;;:25;;;;;:::i;:::-;;9669:139;9532:276;9399:409;9268:540;9175:633;9077:738;;;:::o;5513:1241::-;5592:21;;:::i;:::-;5663:4;:13;;;5645:4;:8;;;:15;5630:5;:12;:30;:46;5626:129;;;5693:50;5700:4;5741:1;5706:32;5710:4;:13;;;5725:5;:12;5706:3;:32::i;:::-;:36;5693:6;:50::i;:::-;5626:129;5765:9;5785:8;5804;5815:5;:12;5804:23;;5882:4;5876:11;5958:6;5952:13;6046:2;6037:6;6029;6025:19;6021:28;6013:36;;6170:5;6164:12;6156:6;6152:25;6144:6;6137:41;6234:2;6227:5;6223:14;6216:21;;5847:401;;6258:212;6271:2;6264:3;:9;6258:212;;6390:3;6384:10;6378:4;6371:24;6432:2;6424:10;;;;6456:2;6449:9;;;;6282:2;6275:9;;;;6258:212;;;6480:9;6512:1;6505:3;6500:2;:8;6492:3;:17;:21;6480:33;;6607:4;6603:9;6597:3;6591:10;6587:26;6660:4;6653;6647:11;6643:22;6705:7;6695:8;6692:21;6686:4;6679:35;6557:168;;6742:4;6735:11;;;;;;5513:1241;;;;:::o;7010:586::-;7110:4;:13;;;7106:1;7088:4;:8;;;:15;:19;:35;7084:99;;;7140:31;7147:4;7169:1;7153:4;:13;;;:17;7140:6;:31::i;:::-;7084:99;7237:4;7231:11;7313:6;7307:13;7405:2;7396:6;7388;7384:19;7380:28;7504:5;7498:4;7490:20;7551:1;7543:6;7539:14;7531:6;7524:30;7202:387;;;;;:::o;7898:748::-;7983:21;;:::i;:::-;8046:4;:13;;;8028:4;:8;;;:15;8021:4;:22;:38;8017:113;;;8076:42;8083:4;8116:1;8089:24;8093:4;:13;;;8108:4;8089:3;:24::i;:::-;:28;8076:6;:42::i;:::-;8017:113;8140:9;8166:1;8159:4;8152:3;:11;:15;8140:27;;8222:4;8216:11;8298:6;8292:13;8390:4;8381:6;8373;8369:19;8365:30;8528:5;8520:4;8516:9;8509:4;8503:11;8499:27;8496:38;8490:4;8483:52;8576:4;8568:6;8564:17;8556:6;8549:33;8187:430;;;8634:4;8627:11;;;7898:748;;;;;:::o;5058:151::-;5111:9;5142:2;5137;:7;5133:49;;;5168:2;5161:9;;;;5133:49;5199:2;5192:9;;5058:151;;;;;:::o;4873:177::-;4949:19;4971:4;:8;;;4949:30;;4990:21;4995:4;5001:9;4990:4;:21::i;:::-;5022:20;5029:4;5035:6;5022;:20::i;:::-;;4873:177;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.6.0;\r\nimport \"./provableAPI.sol\";\r\nimport \"@openzeppelin/upgrades-core/contracts/Initializable.sol\";\r\n\r\ncontract RandomExample2 is usingProvable,Initializable {\r\n    bytes public result;\r\n    bytes32 public queryId;\r\n    \r\n    function initialize() public initializer { \r\n        provable_setProof(proofType_Ledger); \r\n    }\r\n    \r\n    function __callback(bytes32  _queryId,string memory _result,bytes memory _proof ) override public {\r\n        require(msg.sender == provable_cbAddress());\r\n        if (provable_randomDS_proofVerify__returnCode(_queryId,_result,_proof)== 0)\r\n            result = bytes(_result);\r\n        else\r\n            result=\"Error\";\r\n    }\r\n    \r\n    function GetRandom(uint8 nrbytes) public payable { // not supported in remix\r\n        queryId=provable_newRandomDSQuery(\r\n            0,          // QUERY_EXECUTION_DELAY\r\n            nrbytes,    // NUM_RANDOM_BYTES_REQUESTED\r\n            200000      // GAS_FOR_CALLBACK\r\n        );\r\n    }\r\n}\r\n",
  "sourcePath": "Z:/blockchain/web3examples/ethereum/pattern_examples/UpgradeAndOracle/contracts/RandomExample2.sol",
  "ast": {
    "absolutePath": "/Z/blockchain/web3examples/ethereum/pattern_examples/UpgradeAndOracle/contracts/RandomExample2.sol",
    "exportedSymbols": {
      "RandomExample2": [
        182
      ]
    },
    "id": 183,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 109,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:2"
      },
      {
        "absolutePath": "/Z/blockchain/web3examples/ethereum/pattern_examples/UpgradeAndOracle/contracts/provableAPI.sol",
        "file": "./provableAPI.sol",
        "id": 110,
        "nodeType": "ImportDirective",
        "scope": 183,
        "sourceUnit": 6598,
        "src": "58:27:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/upgrades-core/contracts/Initializable.sol",
        "file": "@openzeppelin/upgrades-core/contracts/Initializable.sol",
        "id": 111,
        "nodeType": "ImportDirective",
        "scope": 183,
        "sourceUnit": 6673,
        "src": "87:65:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 112,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6597,
              "src": "183:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$6597",
                "typeString": "contract usingProvable"
              }
            },
            "id": 113,
            "nodeType": "InheritanceSpecifier",
            "src": "183:13:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 114,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6672,
              "src": "197:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$6672",
                "typeString": "contract Initializable"
              }
            },
            "id": 115,
            "nodeType": "InheritanceSpecifier",
            "src": "197:13:2"
          }
        ],
        "contractDependencies": [
          6597,
          6672
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 182,
        "linearizedBaseContracts": [
          182,
          6672,
          6597
        ],
        "name": "RandomExample2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "65372147",
            "id": 117,
            "mutability": "mutable",
            "name": "result",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 182,
            "src": "218:19:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 116,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "218:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3f1be4d4",
            "id": 119,
            "mutability": "mutable",
            "name": "queryId",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 182,
            "src": "244:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 118,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "244:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 128,
              "nodeType": "Block",
              "src": "320:56:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 125,
                        "name": "proofType_Ledger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 891,
                        "src": "350:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      ],
                      "id": 124,
                      "name": "provable_setProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4339,
                      "src": "332:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes1_$returns$__$",
                        "typeString": "function (bytes1)"
                      }
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "332:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "332:35:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8129fc1c",
            "id": 129,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 122,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 121,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6645,
                  "src": "308:11:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "308:11:2"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "298:2:2"
            },
            "returnParameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "320:0:2"
            },
            "scope": 182,
            "src": "279:97:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1257
            ],
            "body": {
              "id": 166,
              "nodeType": "Block",
              "src": "486:228:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 140,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "505:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "505:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 142,
                            "name": "provable_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4351,
                            "src": "519:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "519:20:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "505:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 139,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "497:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "497:43:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 146,
                  "nodeType": "ExpressionStatement",
                  "src": "497:43:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 148,
                          "name": "_queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 131,
                          "src": "597:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 149,
                          "name": "_result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 133,
                          "src": "606:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 150,
                          "name": "_proof",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135,
                          "src": "614:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 147,
                        "name": "provable_randomDS_proofVerify__returnCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6095,
                        "src": "555:41:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint8_$",
                          "typeString": "function (bytes32,string memory,bytes memory) returns (uint8)"
                        }
                      },
                      "id": 151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "555:66:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "624:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "555:70:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 161,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 117,
                        "src": "692:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "hexValue": "4572726f72",
                        "id": 162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "699:7:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1",
                          "typeString": "literal_string \"Error\""
                        },
                        "value": "Error"
                      },
                      "src": "692:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "id": 164,
                    "nodeType": "ExpressionStatement",
                    "src": "692:14:2"
                  },
                  "id": 165,
                  "nodeType": "IfStatement",
                  "src": "551:155:2",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 154,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 117,
                        "src": "640:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 157,
                            "name": "_result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 133,
                            "src": "655:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "649:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 155,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "649:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "649:14:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "src": "640:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "id": 160,
                    "nodeType": "ExpressionStatement",
                    "src": "640:23:2"
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "38bbfa50",
            "id": 167,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 137,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "470:8:2"
            },
            "parameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 131,
                  "mutability": "mutable",
                  "name": "_queryId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 167,
                  "src": "408:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "408:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 133,
                  "mutability": "mutable",
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 167,
                  "src": "426:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "426:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 167,
                  "src": "448:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "448:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "407:62:2"
            },
            "returnParameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "486:0:2"
            },
            "scope": 182,
            "src": "388:326:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 180,
              "nodeType": "Block",
              "src": "775:240:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 172,
                      "name": "queryId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "812:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "860:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "argumentTypes": null,
                          "id": 175,
                          "name": "nrbytes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 169,
                          "src": "910:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "323030303030",
                          "id": 176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "965:6:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_200000_by_1",
                            "typeString": "int_const 200000"
                          },
                          "value": "200000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_rational_200000_by_1",
                            "typeString": "int_const 200000"
                          }
                        ],
                        "id": 173,
                        "name": "provable_newRandomDSQuery",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5672,
                        "src": "820:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                          "typeString": "function (uint256,uint256,uint256) returns (bytes32)"
                        }
                      },
                      "id": 177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "820:187:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "812:195:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "812:195:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "446dd971",
            "id": 181,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetRandom",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 169,
                  "mutability": "mutable",
                  "name": "nrbytes",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 181,
                  "src": "745:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "745:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "744:15:2"
            },
            "returnParameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "775:0:2"
            },
            "scope": 182,
            "src": "726:289:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 183,
        "src": "156:862:2"
      }
    ],
    "src": "33:987:2"
  },
  "legacyAST": {
    "absolutePath": "/Z/blockchain/web3examples/ethereum/pattern_examples/UpgradeAndOracle/contracts/RandomExample2.sol",
    "exportedSymbols": {
      "RandomExample2": [
        182
      ]
    },
    "id": 183,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 109,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:2"
      },
      {
        "absolutePath": "/Z/blockchain/web3examples/ethereum/pattern_examples/UpgradeAndOracle/contracts/provableAPI.sol",
        "file": "./provableAPI.sol",
        "id": 110,
        "nodeType": "ImportDirective",
        "scope": 183,
        "sourceUnit": 6598,
        "src": "58:27:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/upgrades-core/contracts/Initializable.sol",
        "file": "@openzeppelin/upgrades-core/contracts/Initializable.sol",
        "id": 111,
        "nodeType": "ImportDirective",
        "scope": 183,
        "sourceUnit": 6673,
        "src": "87:65:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 112,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6597,
              "src": "183:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$6597",
                "typeString": "contract usingProvable"
              }
            },
            "id": 113,
            "nodeType": "InheritanceSpecifier",
            "src": "183:13:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 114,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6672,
              "src": "197:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$6672",
                "typeString": "contract Initializable"
              }
            },
            "id": 115,
            "nodeType": "InheritanceSpecifier",
            "src": "197:13:2"
          }
        ],
        "contractDependencies": [
          6597,
          6672
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 182,
        "linearizedBaseContracts": [
          182,
          6672,
          6597
        ],
        "name": "RandomExample2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "65372147",
            "id": 117,
            "mutability": "mutable",
            "name": "result",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 182,
            "src": "218:19:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 116,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "218:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3f1be4d4",
            "id": 119,
            "mutability": "mutable",
            "name": "queryId",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 182,
            "src": "244:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 118,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "244:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 128,
              "nodeType": "Block",
              "src": "320:56:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 125,
                        "name": "proofType_Ledger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 891,
                        "src": "350:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      ],
                      "id": 124,
                      "name": "provable_setProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4339,
                      "src": "332:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes1_$returns$__$",
                        "typeString": "function (bytes1)"
                      }
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "332:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "332:35:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8129fc1c",
            "id": 129,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 122,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 121,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6645,
                  "src": "308:11:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "308:11:2"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "298:2:2"
            },
            "returnParameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "320:0:2"
            },
            "scope": 182,
            "src": "279:97:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1257
            ],
            "body": {
              "id": 166,
              "nodeType": "Block",
              "src": "486:228:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 140,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "505:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "505:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 142,
                            "name": "provable_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4351,
                            "src": "519:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "519:20:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "505:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 139,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "497:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "497:43:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 146,
                  "nodeType": "ExpressionStatement",
                  "src": "497:43:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 148,
                          "name": "_queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 131,
                          "src": "597:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 149,
                          "name": "_result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 133,
                          "src": "606:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 150,
                          "name": "_proof",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135,
                          "src": "614:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 147,
                        "name": "provable_randomDS_proofVerify__returnCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6095,
                        "src": "555:41:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint8_$",
                          "typeString": "function (bytes32,string memory,bytes memory) returns (uint8)"
                        }
                      },
                      "id": 151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "555:66:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "624:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "555:70:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 161,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 117,
                        "src": "692:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "hexValue": "4572726f72",
                        "id": 162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "699:7:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1",
                          "typeString": "literal_string \"Error\""
                        },
                        "value": "Error"
                      },
                      "src": "692:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "id": 164,
                    "nodeType": "ExpressionStatement",
                    "src": "692:14:2"
                  },
                  "id": 165,
                  "nodeType": "IfStatement",
                  "src": "551:155:2",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 154,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 117,
                        "src": "640:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 157,
                            "name": "_result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 133,
                            "src": "655:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "649:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 155,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "649:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "649:14:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "src": "640:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "id": 160,
                    "nodeType": "ExpressionStatement",
                    "src": "640:23:2"
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "38bbfa50",
            "id": 167,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 137,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "470:8:2"
            },
            "parameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 131,
                  "mutability": "mutable",
                  "name": "_queryId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 167,
                  "src": "408:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "408:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 133,
                  "mutability": "mutable",
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 167,
                  "src": "426:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "426:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 167,
                  "src": "448:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "448:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "407:62:2"
            },
            "returnParameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "486:0:2"
            },
            "scope": 182,
            "src": "388:326:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 180,
              "nodeType": "Block",
              "src": "775:240:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 172,
                      "name": "queryId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "812:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "860:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "argumentTypes": null,
                          "id": 175,
                          "name": "nrbytes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 169,
                          "src": "910:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "323030303030",
                          "id": 176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "965:6:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_200000_by_1",
                            "typeString": "int_const 200000"
                          },
                          "value": "200000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_rational_200000_by_1",
                            "typeString": "int_const 200000"
                          }
                        ],
                        "id": 173,
                        "name": "provable_newRandomDSQuery",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5672,
                        "src": "820:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                          "typeString": "function (uint256,uint256,uint256) returns (bytes32)"
                        }
                      },
                      "id": 177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "820:187:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "812:195:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "812:195:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "446dd971",
            "id": 181,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetRandom",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 169,
                  "mutability": "mutable",
                  "name": "nrbytes",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 181,
                  "src": "745:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "745:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "744:15:2"
            },
            "returnParameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "775:0:2"
            },
            "scope": 182,
            "src": "726:289:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 183,
        "src": "156:862:2"
      }
    ],
    "src": "33:987:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x4D59405978c6e7A2C331125E9B4bd91e3D15913C",
      "transactionHash": "0xf3ac0abb8e4c25cce69b3c3ae489df65442d7e65463372e1e05aa63221dc04bd"
    }
  },
  "schemaVersion": "3.3.2",
  "updatedAt": "2021-01-29T15:54:34.788Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "__callback(bytes32,string)": {
        "details": "The following `__callback` functions are just placeholders ideally      meant to be defined in child contract when proofs are used.      The function bodies simply silence compiler warnings."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}